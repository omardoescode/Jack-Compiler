class Maths {
  function void init() {
        let twoToThe = Array.new(16);
        let twoToThe[0] = 1;
        let twoToThe[1] = 2;
        let twoToThe[2] = 4;
        let twoToThe[3] = 8;
        let twoToThe[4] = 16;
        let twoToThe[5] = 32;
        let twoToThe[6] = 64;
        let twoToThe[7] = 128;
        let twoToThe[8] = 256;
        let twoToThe[9] = 512;
        let twoToThe[10] = 1024;
        let twoToThe[11] = 2048;
        let twoToThe[12] = 4096;
        let twoToThe[13] = 8192;
        let twoToThe[14] = 16384;
        let twoToThe[15] = 32768;

        return;
  }

  function bool bit(int num, int i) {
    return (twoToThe[i] & num = twoToThe[i]);
  }

  function int multiply(int x, int y) {
    var int sum, shiftedX, i;

    let sum = 0; let shiftedX = x; let i = 0;
    
    while (~(i = 16)) {
      if (bit(y, i)) {
        let sum = sum + shiftedX;
      }
      let shiftedX = shiftedX * 2; let i = i + 1;
    }
    
    return sum;
  }

  function int divide(int x, int y) {
    var int q, result;
    var bool isPositive;

    let isPositive = ((x > 0) = (y > 0));

    if ((y > x) | (y < 0)) {return 0;}

    let q = divide(x, 2 * y);

    if ((x - 2 * q * y) < y) {
      let result = 2 * q;
    }
    else {
      let result = 2 * q + 1;
    }

    if (isPositive) {return result;}
    return -result;
  }

  funciton int abs(int num) {
    if (num < 0) {return -num};
    return num;
  }

  funciton int min(int x, int y) {
    if (x < y) {return x};
    return y;
  }

  funciton int max(int x, int y) {
    if (x > y) {return x};
    return y;
  }

  funciton sqrt(int num) {
    var int j, y, power;
    let j = 7;

    while ((j > 0) | (j = 0)) {
      let power = (y + twoToThe[j]) * (y + twoToThe[j]);
      if (((power < x) | (power = x)) & (power > 0)) {
        let y = y + twoToThe[j];
      }

      let j = j - 1;
    }

    return y;
  }
}
